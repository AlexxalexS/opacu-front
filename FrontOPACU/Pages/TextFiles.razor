@page "/docs"
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager navigationManager
@inject HttpClient Http

<a href="/user-files?id=@idPars">
    <BSButton Size="Size.Small" Color="Color.Primary"><span class="oi oi-arrow-thick-left"></span>Назад</BSButton>
</a>
<br>

<h3>Файлы пользователя @nameParse</h3>

@if (textFiles == null)
{
<p><em>Загрузка...</em></p>
}
else
{
    @if (textFiles.Count > 0)
    {
        <table class="table">
            <thead>
            <tr>
                <th>ID</th>
                <th>SymbolCount</th>
                <th>Encoding</th>
                <th/>
            </tr>
            </thead>
            <tbody>
            @foreach (var sound in textFiles)
            {
       
                <audio id="sound+@sound.Id" src="https://localhost:5000/@sound.File.Path" />

                <tr>
                    <td>@sound.Id</td>
                    <td>@sound.SymbolCount</td>
                    <td>@sound.Encoding</td>
                    <td>@sound.File.Title</td>
                    <td>@sound.File.Description</td>
                    <td>@sound.File.Size</td>
                    <td>
                        <button style="background: none; outline: none; border: none" onclick="document.getElementById('sound+@sound.Id').play()"><span class="oi oi-media-play"></span></button>
                    </td>
                    <td>
                        <button style="background: none; outline: none; border: none" onclick="document.getElementById('sound+@sound.Id').pause()"><span class="oi oi-media-pause"></span></button>
                    </td>
            
                </tr>
            }
            </tbody>
        </table>
    }
    {
        <h1>Вы еще не загрузили файлы</h1>
    }
}

@code {
    private string idPars;
    private string nameParse;
    private List<TextFile> textFiles;
    
    protected override async Task OnInitializedAsync()
    {
        
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        
        if(QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var id))
        {
            idPars = id.First();
        }

        if(QueryHelpers.ParseQuery(uri.Query).TryGetValue("name", out var name))
        {
            nameParse = name.First();
        }
        
        string url = $"{Program.apiURL}/users/" + idPars + "/text-files";
        
        textFiles = await Http.GetFromJsonAsync<List<TextFile>>(url);
    }
    
    
    public class TextFile
    {
        public Guid Id { get; set; }

        public int SymbolCount { get; set; }
        
        public string Encoding { get; set; }
        
        public UserFiles.File File { get; set; }
    }
    
}